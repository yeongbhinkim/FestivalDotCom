<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.googoo.festivaldotcom.domain.member.infrastructure.repository.UserRepository">

    <!-- Provider와 OAuth ID로 사용자 조회 -->
    <select id="selectOauthId" resultType="com.googoo.festivaldotcom.domain.member.domain.model.User">
        SELECT *
        FROM users
        WHERE provider = #{provider}
          AND oauth_id = #{oauthId}
          AND deleted = 0
    </select>

    <!-- 사용자 ID로 사용자 조회 -->
    <select id="selectId" resultType="com.googoo.festivaldotcom.domain.member.domain.model.User">
        SELECT *
        FROM users
        WHERE id = #{id}
          AND deleted = 0
    </select>

    <!-- 사용자 ID로 사용자 oauth_id 조회 -->
    <select id="getOauthId" resultType="String">
        SELECT oauth_id
        FROM users
        WHERE id = #{userId}
          AND deleted = 0
    </select>

    <!-- 새 사용자 저장 -->
    <insert id="insertUser" parameterType="com.googoo.festivaldotcom.domain.member.domain.model.User">
        INSERT INTO users (
            nick_name, introduction, profile_img_url, manner_score,
           festival_count, enabled, provider, oauth_id,
           created_at, updated_at, deleted
        ) VALUES (
            #{nickName}, #{introduction}, #{profileImgUrl}, #{mannerScore},
            #{festivalCount}, #{enabled}, #{provider}, #{oauthId},
            now(), now(), #{deleted}
         )
    </insert>

    <!--  사용자 수정  -->
    <update id="updateUser" parameterType="com.googoo.festivaldotcom.domain.member.application.dto.request.UpdateUserRequest">
        UPDATE users
        SET nick_name = #{nickName},
            profile_img_url = #{profileImgUrl},
            introduction = #{introduction},
            gender = #{gender},
            companyEmail = #{companyEmail}

        WHERE id = #{id}
          AND deleted = 0
    </update>

    <!--  사용자 삭제  -->
    <update id="deleteUser" parameterType="com.googoo.festivaldotcom.domain.member.application.dto.request.UpdateUserRequest">
        UPDATE users
        SET deleted = 1
        WHERE id = #{userId}
    </update>

    <!--  사용자 중복체크  -->
    <select id="selectNickName" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM users
        WHERE nick_name = #{nickName}
    </select>



</mapper>
